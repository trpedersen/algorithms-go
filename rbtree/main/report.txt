34.46s of 35.73s total (96.45%)
Dropped 76 nodes (cum <= 0.18s)
      flat  flat%   sum%        cum   cum%
     6.46s 18.08% 18.08%      6.46s 18.08%  main.(*IntKey).Compare
     5.23s 14.64% 32.72%      9.35s 26.17%  bitbucket.org/trpedersen/algorithms/rbtree.get
     4.71s 13.18% 45.90%      6.49s 18.16%  bitbucket.org/trpedersen/algorithms/rbtree.put
     4.42s 12.37% 58.27%      5.18s 14.50%  bitbucket.org/trpedersen/algorithms/rbtree.balance
     3.84s 10.75% 69.02%     11.12s 31.12%  bitbucket.org/trpedersen/algorithms/rbtree.deleteNode
     1.38s  3.86% 72.88%      1.86s  5.21%  runtime.mallocgc
     1.14s  3.19% 76.07%      3.02s  8.45%  runtime.scanobject
     0.75s  2.10% 78.17%      1.47s  4.11%  runtime.greyobject
     0.74s  2.07% 80.24%      0.74s  2.07%  runtime.heapBitsForObject
     0.66s  1.85% 82.09%      0.66s  1.85%  bitbucket.org/trpedersen/algorithms/rbtree.moveRedLeft
     0.59s  1.65% 83.74%      0.75s  2.10%  bitbucket.org/trpedersen/algorithms/rbtree.rotateRight
     0.56s  1.57% 85.31%     29.81s 83.43%  main.TestDeleteIntKeys.func1
     0.37s  1.04% 86.34%      0.37s  1.04%  runtime.atomicor8
     0.37s  1.04% 87.38%      0.69s  1.93%  runtime.heapBitsSweepSpan
     0.35s  0.98% 88.36%      0.73s  2.04%  runtime.mCentral_Grow
     0.34s  0.95% 89.31%     15.03s 42.07%  bitbucket.org/trpedersen/algorithms/rbtree.(*RBTree).Delete
     0.32s   0.9% 90.20%      9.67s 27.06%  bitbucket.org/trpedersen/algorithms/rbtree.(*RBTree).Get
     0.32s   0.9% 91.10%      0.32s   0.9%  runtime.mSpan_Sweep.func1
     0.25s   0.7% 91.80%      2.11s  5.91%  runtime.newobject
     0.24s  0.67% 92.47%      0.25s   0.7%  runtime.heapBitsSetType
     0.21s  0.59% 93.06%      0.21s  0.59%  runtime.prefetchnta
     0.20s  0.56% 93.62%      3.68s 10.30%  runtime.systemstack
     0.18s   0.5% 94.12%      0.54s  1.51%  runtime.heapBits.setMarked
     0.14s  0.39% 94.51%      0.18s   0.5%  runtime.(*gcWork).put
     0.11s  0.31% 94.82%      0.50s  1.40%  runtime.gcmarkwb_m
     0.10s  0.28% 95.10%      6.59s 18.44%  bitbucket.org/trpedersen/algorithms/rbtree.(*RBTree).Put
     0.09s  0.25% 95.35%      3.56s  9.96%  bitbucket.org/trpedersen/algorithms/rbtree.(*RBTree).Contains
     0.09s  0.25% 95.61%      0.59s  1.65%  runtime.writebarrierptr_nostore1.func1
     0.08s  0.22% 95.83%      0.23s  0.64%  runtime.writebarrierptr
     0.06s  0.17% 96.00%      0.39s  1.09%  runtime.shade
     0.04s  0.11% 96.11%      2.04s  5.71%  runtime.gcDrainUntilPreempt
     0.03s 0.084% 96.19%      0.83s  2.32%  runtime.mCentral_CacheSpan
     0.02s 0.056% 96.25%      1.15s  3.22%  runtime.gcDrainN
     0.02s 0.056% 96.31%      0.77s  2.16%  runtime.mSpan_Sweep
     0.02s 0.056% 96.36%      0.80s  2.24%  runtime.sweepone
     0.01s 0.028% 96.39%      0.84s  2.35%  runtime.mCache_Refill
     0.01s 0.028% 96.42%      0.33s  0.92%  runtime.mHeap_Alloc
     0.01s 0.028% 96.45%      0.18s   0.5%  runtime.mHeap_Alloc_m
         0     0% 96.45%     29.81s 83.43%  main.TestDeleteIntKeys
         0     0% 96.45%     29.81s 83.43%  main.main
         0     0% 96.45%      1.15s  3.22%  runtime.gcAssistAlloc.func1
         0     0% 96.45%      2.04s  5.71%  runtime.gcBgMarkWorker
         0     0% 96.45%     31.86s 89.17%  runtime.goexit
         0     0% 96.45%      0.68s  1.90%  runtime.gosweepone.func1
         0     0% 96.45%      0.18s   0.5%  runtime.mHeap_Alloc.func1
         0     0% 96.45%     29.81s 83.43%  runtime.main
         0     0% 96.45%      0.84s  2.35%  runtime.mallocgc.func2
         0     0% 96.45%      3.48s  9.74%  runtime.startTheWorldWithSema
